<?xml version="1.0" standalone="no"?>

<kickstart>

<post>

<!-- change eth0 to be dhcp and mac address neutral -->
<file name="/etc/sysconfig/network-scripts/ifcfg-eth0">
DEVICE=eth0                                            
BOOTPROTO=dhcp                                       
ONBOOT=yes     
</file>

<!-- change network file to not have hostname of gateway -->
<file name="/etc/sysconfig/network">
NETWORKING=yes
</file>

<!-- Download the EC2 Modules/Kernel. -->
#/bin/rm /boot/vmlinuz*
#/bin/rm /boot/xen-syms*
cd /tmp
wget http://<var name="Kickstart_PrivateAddress"/>/ec2/<var name="ec2_kernelTar"/>
cd /
tar xzf /tmp/<var name="ec2_kernelTar"/>

mkinitrd --builtin=ehci-hcd --builtin=ohci-hcd --builtin=uhci-hcd --builtin=xenblk /boot/initrd-<var name="ec2_kernelVersion"/>  <var name="ec2_kernelVersion"/> 
<!-- Fix-up Grub  More Hacking-->
<file name="/boot/grub/grub-orig.conf" mode="append">
title Rocks-EC2 (<var name="ec2_kernel"/>)
	root (hd0,0)
	kernel /boot/<var name="ec2_kernel"/>  ro root=LABEL=/ rhgb quiet
	initrd /boot/initrd-<var name="ec2_kernelVersion"/>
</file>

/bin/sed -i /boot/grub/grub-orig.conf -e "s/^default=0/default=1/"

<!-- remove /install if it exists it is in the wrong place -->
if [ -d /install ]; then
     /bin/rm -rf /install
fi

<file name="/etc/motd" mode="append">
EC2-enabled Client
</file>

<!-- Get the user's authorized key as root's key using Amazon published method-->
<file name="/etc/rc.d/rocksconfig.d/post-90-ec2-root-ssh-key" perms="744">
<![CDATA[
if [ ! -d /root/.ssh ] ; then
        mkdir -p /root/.ssh
        chmod 700 /root/.ssh
fi
# Fetch public key using HTTP
curl http://169.254.169.254/2009-04-04//meta-data/public-keys/0/openssh-key > /tmp/my-key
if [ $? -eq 0 ] ; then
	# check if this key is already there
	grep `cat /tmp/my-key` /root/.ssh/authorized_keys > /dev/null
	if [ $? -ne 0 ]; then 
        	cat /tmp/my-key >> /root/.ssh/authorized_keys
        	chmod 700 /root/.ssh/authorized_keys
        	rm /tmp/my-key
	fi
fi
]]>
</file>

</post>

</kickstart> 

